#
# This file is part of Invenio.
# Copyright (C) 2025 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Create legacy table."""

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f57e61d833b1'
down_revision = 'bf9c38b8dabd'
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cds_migration_legacy_records',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    sa.Column('migrated_record_object_uuid', sqlalchemy_utils.types.uuid.UUIDType(), nullable=True, comment='The uuid of the record metadata of the latest record metadata at the time of the migration.'),
    sa.Column('legacy_recid', sa.Integer(), nullable=True, comment='The record id in the legacy system'),
    sa.Column('json', sa.JSON().with_variant(postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), 'postgresql'), nullable=True, comment='The extracted information of the legacy record before any transformation.'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cds_migration_legacy_records'))
    )
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cds_migration_legacy_records')
    # ### end Alembic commands ###
